var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [SuiteSparseMatrixCollection]","category":"page"},{"location":"reference/#SuiteSparseMatrixCollection.ssmc_formats","page":"Reference","title":"SuiteSparseMatrixCollection.ssmc_formats","text":"Formats in which matrices are available.\n\n\n\n\n\n","category":"constant"},{"location":"reference/#SuiteSparseMatrixCollection.delete_all_ssmc-Tuple{}","page":"Reference","title":"SuiteSparseMatrixCollection.delete_all_ssmc","text":"delete_all_ssmc()\n\nRemove all matrices from the SuiteSparseMatrixCollection.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SuiteSparseMatrixCollection.delete_ssmc-Tuple{AbstractString, AbstractString}","page":"Reference","title":"SuiteSparseMatrixCollection.delete_ssmc","text":"delete_ssmc(name::AbstractString, group::AbstractString; format = \"MM\")\n\nRemove the matrix with name name in group group.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SuiteSparseMatrixCollection.fetch_ssmc-Tuple{AbstractString, AbstractString}","page":"Reference","title":"SuiteSparseMatrixCollection.fetch_ssmc","text":" fetch_ssmc(group::AbstractString, name::AbstractString; format=\"MM\")\n\nDownload the matrix with name name in group group. Return the path where the matrix is stored.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SuiteSparseMatrixCollection.fetch_ssmc-Tuple{Any}","page":"Reference","title":"SuiteSparseMatrixCollection.fetch_ssmc","text":" fetch_ssmc(matrices; format=\"MM\")\n\nDownload matrices from the SuiteSparseMatrixCollection. The argument matrices should be a DataFrame or DataFrameRow. An array of strings is returned with the paths where the matrices are stored.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SuiteSparseMatrixCollection.ssmc_matrices-Tuple{DataFrames.DataFrame, AbstractString, AbstractString}","page":"Reference","title":"SuiteSparseMatrixCollection.ssmc_matrices","text":"ssmc_matrices(ssmc, group, name)\n\nReturn a DataFrame of matrices whose group contains the string group and whose name contains the string name.\n\nssmc_matrices(ssmc, name)\nssmc_matrices(ssmc, \"\", name)\n\nReturn a DataFrame of matrices whose name contains the string name.\n\nssmc_matrices(ssmc, group, \"\")\n\nReturn a DataFrame of matrices whose group contains the string group.\n\nExample: ssmc_matrices(ssmc, \"HB\", \"bcsstk\").\n\n\n\n\n\n","category":"method"},{"location":"#Home","page":"Home","title":"SuiteSparseMatrixCollection.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A straightforward interface to the SuiteSparse Matrix Collection.","category":"page"},{"location":"#How-to-install","page":"Home","title":"How to install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add SuiteSparseMatrixCollection\npkg> test SuiteSparseMatrixCollection","category":"page"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using SuiteSparseMatrixCollection  # the database is named ssmc\n\njulia> # name-based selection can be done with `ssmc_matrices()`\njulia> ssmc = ssmc_db()\njulia> ssmc_matrices(ssmc, \"HB\", \"bcsstk\")  # all matrices whose group contains \"HB\" and name contains \"bcsstk\"\njulia> ssmc_matrices(ssmc, \"\", \"bcsstk\")    # all matrices whose name contains \"bcsstk\"\njulia> ssmc_matrices(ssmc, \"HB\", \"\")        # all matrices whose group contains \"HB\"\n\njulia> # select symmetric positive definite matrices with ≤ 100 rows and columns\njulia> tiny = ssmc[(ssmc.numerical_symmetry .== 1) .& (ssmc.positive_definite.== true) .&\n                   (ssmc.real .== true) .& (ssmc.nrows .≤ 100), :]\n\njulia> # fetch the matrices selects in MatrixMarket format\njulia> paths = fetch_ssmc(tiny, format=\"MM\")  # matrices are downloaded in paths","category":"page"}]
}
